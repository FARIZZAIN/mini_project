{"ast":null,"code":"var _jsxFileName = \"C:\\\\Tutor\\\\react-website\\\\src\\\\components\\\\Speech_to_text.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport useVoiceInput from \"./Voiceinput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChat, setCurrentChat] = useState([]);\n  const [currentChatIndex, setCurrentChatIndex] = useState(null);\n  const [inputText, setInputText] = useState(\"\");\n  const [language, setLanguage] = useState(\"en-US\");\n  const onVoiceResult = transcript => {\n    addMessage({\n      type: \"user\",\n      text: transcript\n    });\n  };\n  const {\n    listening,\n    startListening\n  } = useVoiceInput(onVoiceResult, language);\n\n  // Load chat history from local storage\n  useEffect(() => {\n    const savedChats = JSON.parse(localStorage.getItem(\"chats\")) || [];\n    setChats(savedChats);\n    if (savedChats.length > 0) {\n      setCurrentChat(savedChats[0]);\n      setCurrentChatIndex(0);\n    }\n  }, []);\n\n  // Save chat history whenever chats change\n  useEffect(() => {\n    localStorage.setItem(\"chats\", JSON.stringify(chats));\n  }, [chats]);\n  const addMessage = message => {\n    const updatedChat = [...currentChat, message];\n    setCurrentChat(updatedChat);\n    const updatedChats = [...chats];\n    if (currentChatIndex !== null) {\n      updatedChats[currentChatIndex] = updatedChat;\n    } else {\n      updatedChats.push(updatedChat);\n      setCurrentChatIndex(updatedChats.length - 1);\n    }\n    setChats(updatedChats);\n  };\n  const handleSendMessage = () => {\n    if (inputText.trim()) {\n      addMessage({\n        type: \"user\",\n        text: inputText\n      });\n      setInputText(\"\");\n    }\n  };\n  const startNewChat = () => {\n    const newChats = [...chats, []];\n    setChats(newChats);\n    setCurrentChat([]);\n    setCurrentChatIndex(newChats.length - 1);\n  };\n  const loadChat = index => {\n    setCurrentChat(chats[index]);\n    setCurrentChatIndex(index);\n  };\n  const deleteChat = index => {\n    const updatedChats = chats.filter((_, i) => i !== index);\n    setChats(updatedChats);\n    if (currentChatIndex === index) {\n      setCurrentChat(updatedChats.length > 0 ? updatedChats[0] : []);\n      setCurrentChatIndex(updatedChats.length > 0 ? 0 : null);\n    }\n  };\n  const clearAllChats = () => {\n    setChats([]);\n    setCurrentChat([]);\n    setCurrentChatIndex(null);\n    localStorage.removeItem(\"chats\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewChat,\n        className: \"btn new-chat\",\n        children: \"\\u2795 New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat-item ${index === currentChatIndex ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => loadChat(index),\n            children: [\"Chat \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn delete\",\n            onClick: () => deleteChat(index),\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), chats.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearAllChats,\n        className: \"btn clear-all\",\n        children: \"\\uD83D\\uDDD1\\uFE0F Clear All Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Python Tutor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: currentChat.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder\",\n          children: \"Start speaking or typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : currentChat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          className: \"input\",\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"btn send\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startListening,\n          className: `btn mic ${listening ? \"active\" : \"\"}`,\n          children: listening ? \"Listening...\" : \"🎤\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          className: \"language-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en-US\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ml-IN\",\n            children: \"Malayalam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"zSfo7eZNZWj72EPplxeqDLx3xeQ=\", false, function () {\n  return [useVoiceInput];\n});\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","useVoiceInput","jsxDEV","_jsxDEV","SpeechToText","_s","chats","setChats","currentChat","setCurrentChat","currentChatIndex","setCurrentChatIndex","inputText","setInputText","language","setLanguage","onVoiceResult","transcript","addMessage","type","text","listening","startListening","savedChats","JSON","parse","localStorage","getItem","length","setItem","stringify","message","updatedChat","updatedChats","push","handleSendMessage","trim","startNewChat","newChats","loadChat","index","deleteChat","filter","_","i","clearAllChats","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","chat","msg","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Tutor/react-website/src/components/Speech_to_text.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useVoiceInput from \"./Voiceinput\"; \r\n\r\nconst SpeechToText = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [currentChatIndex, setCurrentChatIndex] = useState(null);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"en-US\"); \r\n\r\n  const onVoiceResult = (transcript) => {\r\n    addMessage({ type: \"user\", text: transcript });\r\n  };\r\n\r\n  const { listening, startListening } = useVoiceInput(onVoiceResult, language);\r\n\r\n  // Load chat history from local storage\r\n  useEffect(() => {\r\n    const savedChats = JSON.parse(localStorage.getItem(\"chats\")) || [];\r\n    setChats(savedChats);\r\n    if (savedChats.length > 0) {\r\n      setCurrentChat(savedChats[0]);\r\n      setCurrentChatIndex(0);\r\n    }\r\n  }, []);\r\n\r\n  // Save chat history whenever chats change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chats\", JSON.stringify(chats));\r\n  }, [chats]);\r\n\r\n  const addMessage = (message) => {\r\n    const updatedChat = [...currentChat, message];\r\n    setCurrentChat(updatedChat);\r\n\r\n    const updatedChats = [...chats];\r\n    if (currentChatIndex !== null) {\r\n      updatedChats[currentChatIndex] = updatedChat;\r\n    } else {\r\n      updatedChats.push(updatedChat);\r\n      setCurrentChatIndex(updatedChats.length - 1);\r\n    }\r\n    setChats(updatedChats);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputText.trim()) {\r\n      addMessage({ type: \"user\", text: inputText });\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  const startNewChat = () => {\r\n    const newChats = [...chats, []];\r\n    setChats(newChats);\r\n    setCurrentChat([]);\r\n    setCurrentChatIndex(newChats.length - 1);\r\n  };\r\n\r\n  const loadChat = (index) => {\r\n    setCurrentChat(chats[index]);\r\n    setCurrentChatIndex(index);\r\n  };\r\n\r\n  const deleteChat = (index) => {\r\n    const updatedChats = chats.filter((_, i) => i !== index);\r\n    setChats(updatedChats);\r\n\r\n    if (currentChatIndex === index) {\r\n      setCurrentChat(updatedChats.length > 0 ? updatedChats[0] : []);\r\n      setCurrentChatIndex(updatedChats.length > 0 ? 0 : null);\r\n    }\r\n  };\r\n\r\n  const clearAllChats = () => {\r\n    setChats([]);\r\n    setCurrentChat([]);\r\n    setCurrentChatIndex(null);\r\n    localStorage.removeItem(\"chats\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Chat History</h2>\r\n        <button onClick={startNewChat} className=\"btn new-chat\">➕ New Chat</button>\r\n        <ul>\r\n          {chats.map((chat, index) => (\r\n            <li\r\n              key={index}\r\n              className={`chat-item ${index === currentChatIndex ? \"active\" : \"\"}`}\r\n            >\r\n              <span onClick={() => loadChat(index)}>Chat {index + 1}</span>\r\n              <button className=\"btn delete\" onClick={() => deleteChat(index)}>🗑️</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {chats.length > 0 && (\r\n          <button onClick={clearAllChats} className=\"btn clear-all\">🗑️ Clear All Chats</button>\r\n        )}\r\n      </div>\r\n      <div className=\"chat-window\">\r\n        <h1>Python Tutor</h1>\r\n        <div className=\"chat-box\">\r\n          {currentChat.length === 0 ? (\r\n            <p className=\"placeholder\">Start speaking or typing...</p>\r\n          ) : (\r\n            currentChat.map((msg, index) => (\r\n              <div key={index} className={`message ${msg.type}`}>\r\n                {msg.text}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button onClick={handleSendMessage} className=\"btn send\">Send</button>\r\n          <button onClick={startListening} className={`btn mic ${listening ? \"active\" : \"\"}`}>\r\n            {listening ? \"Listening...\" : \"🎤\"}\r\n          </button>\r\n          <select value={language} onChange={(e) => setLanguage(e.target.value)} className=\"language-select\">\r\n            <option value=\"en-US\">English</option>\r\n            <option value=\"ml-IN\">Malayalam</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}